// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/money/money.proto

// Protobuf Java Version: 3.25.1
package money;

public final class Money {
  private Money() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CurrencyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:money.Currency)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Code is a 3-character currency-code, according to ISO 4217, like "nok" and "eur".
     * </pre>
     *
     * <code>string code = 1;</code>
     * @return The code.
     */
    java.lang.String getCode();
    /**
     * <pre>
     * Code is a 3-character currency-code, according to ISO 4217, like "nok" and "eur".
     * </pre>
     *
     * <code>string code = 1;</code>
     * @return The bytes for code.
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <pre>
     * MinorUnits is the number of minor units (like cents) required to create one full currency-unit. If a currency requires 100 cents to create a full Euro/Dollar, the minorUnits will be 2.
     * </pre>
     *
     * <code>uint32 minor_units = 2;</code>
     * @return The minorUnits.
     */
    int getMinorUnits();
  }
  /**
   * <pre>
   * Currency contains information about a currency.
   * </pre>
   *
   * Protobuf type {@code money.Currency}
   */
  public static final class Currency extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:money.Currency)
      CurrencyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Currency.newBuilder() to construct.
    private Currency(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Currency() {
      code_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Currency();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return money.Money.internal_static_money_Currency_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return money.Money.internal_static_money_Currency_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              money.Money.Currency.class, money.Money.Currency.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object code_ = "";
    /**
     * <pre>
     * Code is a 3-character currency-code, according to ISO 4217, like "nok" and "eur".
     * </pre>
     *
     * <code>string code = 1;</code>
     * @return The code.
     */
    @java.lang.Override
    public java.lang.String getCode() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        code_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Code is a 3-character currency-code, according to ISO 4217, like "nok" and "eur".
     * </pre>
     *
     * <code>string code = 1;</code>
     * @return The bytes for code.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCodeBytes() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MINOR_UNITS_FIELD_NUMBER = 2;
    private int minorUnits_ = 0;
    /**
     * <pre>
     * MinorUnits is the number of minor units (like cents) required to create one full currency-unit. If a currency requires 100 cents to create a full Euro/Dollar, the minorUnits will be 2.
     * </pre>
     *
     * <code>uint32 minor_units = 2;</code>
     * @return The minorUnits.
     */
    @java.lang.Override
    public int getMinorUnits() {
      return minorUnits_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(code_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, code_);
      }
      if (minorUnits_ != 0) {
        output.writeUInt32(2, minorUnits_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(code_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, code_);
      }
      if (minorUnits_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, minorUnits_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof money.Money.Currency)) {
        return super.equals(obj);
      }
      money.Money.Currency other = (money.Money.Currency) obj;

      if (!getCode()
          .equals(other.getCode())) return false;
      if (getMinorUnits()
          != other.getMinorUnits()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode().hashCode();
      hash = (37 * hash) + MINOR_UNITS_FIELD_NUMBER;
      hash = (53 * hash) + getMinorUnits();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static money.Money.Currency parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static money.Money.Currency parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static money.Money.Currency parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static money.Money.Currency parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static money.Money.Currency parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static money.Money.Currency parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static money.Money.Currency parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static money.Money.Currency parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static money.Money.Currency parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static money.Money.Currency parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static money.Money.Currency parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static money.Money.Currency parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(money.Money.Currency prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Currency contains information about a currency.
     * </pre>
     *
     * Protobuf type {@code money.Currency}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:money.Currency)
        money.Money.CurrencyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return money.Money.internal_static_money_Currency_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return money.Money.internal_static_money_Currency_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                money.Money.Currency.class, money.Money.Currency.Builder.class);
      }

      // Construct using money.Money.Currency.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        code_ = "";
        minorUnits_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return money.Money.internal_static_money_Currency_descriptor;
      }

      @java.lang.Override
      public money.Money.Currency getDefaultInstanceForType() {
        return money.Money.Currency.getDefaultInstance();
      }

      @java.lang.Override
      public money.Money.Currency build() {
        money.Money.Currency result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public money.Money.Currency buildPartial() {
        money.Money.Currency result = new money.Money.Currency(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(money.Money.Currency result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.code_ = code_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.minorUnits_ = minorUnits_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof money.Money.Currency) {
          return mergeFrom((money.Money.Currency)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(money.Money.Currency other) {
        if (other == money.Money.Currency.getDefaultInstance()) return this;
        if (!other.getCode().isEmpty()) {
          code_ = other.code_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getMinorUnits() != 0) {
          setMinorUnits(other.getMinorUnits());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                code_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                minorUnits_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object code_ = "";
      /**
       * <pre>
       * Code is a 3-character currency-code, according to ISO 4217, like "nok" and "eur".
       * </pre>
       *
       * <code>string code = 1;</code>
       * @return The code.
       */
      public java.lang.String getCode() {
        java.lang.Object ref = code_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          code_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Code is a 3-character currency-code, according to ISO 4217, like "nok" and "eur".
       * </pre>
       *
       * <code>string code = 1;</code>
       * @return The bytes for code.
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        java.lang.Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Code is a 3-character currency-code, according to ISO 4217, like "nok" and "eur".
       * </pre>
       *
       * <code>string code = 1;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        code_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Code is a 3-character currency-code, according to ISO 4217, like "nok" and "eur".
       * </pre>
       *
       * <code>string code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        code_ = getDefaultInstance().getCode();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Code is a 3-character currency-code, according to ISO 4217, like "nok" and "eur".
       * </pre>
       *
       * <code>string code = 1;</code>
       * @param value The bytes for code to set.
       * @return This builder for chaining.
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        code_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int minorUnits_ ;
      /**
       * <pre>
       * MinorUnits is the number of minor units (like cents) required to create one full currency-unit. If a currency requires 100 cents to create a full Euro/Dollar, the minorUnits will be 2.
       * </pre>
       *
       * <code>uint32 minor_units = 2;</code>
       * @return The minorUnits.
       */
      @java.lang.Override
      public int getMinorUnits() {
        return minorUnits_;
      }
      /**
       * <pre>
       * MinorUnits is the number of minor units (like cents) required to create one full currency-unit. If a currency requires 100 cents to create a full Euro/Dollar, the minorUnits will be 2.
       * </pre>
       *
       * <code>uint32 minor_units = 2;</code>
       * @param value The minorUnits to set.
       * @return This builder for chaining.
       */
      public Builder setMinorUnits(int value) {

        minorUnits_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MinorUnits is the number of minor units (like cents) required to create one full currency-unit. If a currency requires 100 cents to create a full Euro/Dollar, the minorUnits will be 2.
       * </pre>
       *
       * <code>uint32 minor_units = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinorUnits() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minorUnits_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:money.Currency)
    }

    // @@protoc_insertion_point(class_scope:money.Currency)
    private static final money.Money.Currency DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new money.Money.Currency();
    }

    public static money.Money.Currency getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Currency>
        PARSER = new com.google.protobuf.AbstractParser<Currency>() {
      @java.lang.Override
      public Currency parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Currency> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Currency> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public money.Money.Currency getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PriceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:money.Price)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Currency is the currency the money is given in.
     * </pre>
     *
     * <code>.money.Currency currency = 1;</code>
     * @return Whether the currency field is set.
     */
    boolean hasCurrency();
    /**
     * <pre>
     * Currency is the currency the money is given in.
     * </pre>
     *
     * <code>.money.Currency currency = 1;</code>
     * @return The currency.
     */
    money.Money.Currency getCurrency();
    /**
     * <pre>
     * Currency is the currency the money is given in.
     * </pre>
     *
     * <code>.money.Currency currency = 1;</code>
     */
    money.Money.CurrencyOrBuilder getCurrencyOrBuilder();

    /**
     * <pre>
     * Amount, given in minor units of the currency.
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <code>uint64 base_amount = 3;</code>
     * @return The baseAmount.
     */
    long getBaseAmount();
  }
  /**
   * <pre>
   * Price contains information about a certain sum of money.
   * E.g. (Currency=("NOK", 2) + Amount=100) -&gt; 1 NOK = 100 Norwegian cents
   * E.g. (Currency=("ISK", 0) + Amount=100) -&gt; 100 ISK = 100 Icelandic króna (Iceland does not have cents)
   * </pre>
   *
   * Protobuf type {@code money.Price}
   */
  public static final class Price extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:money.Price)
      PriceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Price.newBuilder() to construct.
    private Price(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Price() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Price();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return money.Money.internal_static_money_Price_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return money.Money.internal_static_money_Price_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              money.Money.Price.class, money.Money.Price.Builder.class);
    }

    private int bitField0_;
    public static final int CURRENCY_FIELD_NUMBER = 1;
    private money.Money.Currency currency_;
    /**
     * <pre>
     * Currency is the currency the money is given in.
     * </pre>
     *
     * <code>.money.Currency currency = 1;</code>
     * @return Whether the currency field is set.
     */
    @java.lang.Override
    public boolean hasCurrency() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Currency is the currency the money is given in.
     * </pre>
     *
     * <code>.money.Currency currency = 1;</code>
     * @return The currency.
     */
    @java.lang.Override
    public money.Money.Currency getCurrency() {
      return currency_ == null ? money.Money.Currency.getDefaultInstance() : currency_;
    }
    /**
     * <pre>
     * Currency is the currency the money is given in.
     * </pre>
     *
     * <code>.money.Currency currency = 1;</code>
     */
    @java.lang.Override
    public money.Money.CurrencyOrBuilder getCurrencyOrBuilder() {
      return currency_ == null ? money.Money.Currency.getDefaultInstance() : currency_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_ = 0L;
    /**
     * <pre>
     * Amount, given in minor units of the currency.
     * </pre>
     *
     * <code>uint64 amount = 2;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }

    public static final int BASE_AMOUNT_FIELD_NUMBER = 3;
    private long baseAmount_ = 0L;
    /**
     * <code>uint64 base_amount = 3;</code>
     * @return The baseAmount.
     */
    @java.lang.Override
    public long getBaseAmount() {
      return baseAmount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getCurrency());
      }
      if (amount_ != 0L) {
        output.writeUInt64(2, amount_);
      }
      if (baseAmount_ != 0L) {
        output.writeUInt64(3, baseAmount_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCurrency());
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, amount_);
      }
      if (baseAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, baseAmount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof money.Money.Price)) {
        return super.equals(obj);
      }
      money.Money.Price other = (money.Money.Price) obj;

      if (hasCurrency() != other.hasCurrency()) return false;
      if (hasCurrency()) {
        if (!getCurrency()
            .equals(other.getCurrency())) return false;
      }
      if (getAmount()
          != other.getAmount()) return false;
      if (getBaseAmount()
          != other.getBaseAmount()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCurrency()) {
        hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getCurrency().hashCode();
      }
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (37 * hash) + BASE_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBaseAmount());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static money.Money.Price parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static money.Money.Price parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static money.Money.Price parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static money.Money.Price parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static money.Money.Price parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static money.Money.Price parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static money.Money.Price parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static money.Money.Price parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static money.Money.Price parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static money.Money.Price parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static money.Money.Price parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static money.Money.Price parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(money.Money.Price prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Price contains information about a certain sum of money.
     * E.g. (Currency=("NOK", 2) + Amount=100) -&gt; 1 NOK = 100 Norwegian cents
     * E.g. (Currency=("ISK", 0) + Amount=100) -&gt; 100 ISK = 100 Icelandic króna (Iceland does not have cents)
     * </pre>
     *
     * Protobuf type {@code money.Price}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:money.Price)
        money.Money.PriceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return money.Money.internal_static_money_Price_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return money.Money.internal_static_money_Price_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                money.Money.Price.class, money.Money.Price.Builder.class);
      }

      // Construct using money.Money.Price.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCurrencyFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        currency_ = null;
        if (currencyBuilder_ != null) {
          currencyBuilder_.dispose();
          currencyBuilder_ = null;
        }
        amount_ = 0L;
        baseAmount_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return money.Money.internal_static_money_Price_descriptor;
      }

      @java.lang.Override
      public money.Money.Price getDefaultInstanceForType() {
        return money.Money.Price.getDefaultInstance();
      }

      @java.lang.Override
      public money.Money.Price build() {
        money.Money.Price result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public money.Money.Price buildPartial() {
        money.Money.Price result = new money.Money.Price(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(money.Money.Price result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.currency_ = currencyBuilder_ == null
              ? currency_
              : currencyBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.amount_ = amount_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.baseAmount_ = baseAmount_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof money.Money.Price) {
          return mergeFrom((money.Money.Price)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(money.Money.Price other) {
        if (other == money.Money.Price.getDefaultInstance()) return this;
        if (other.hasCurrency()) {
          mergeCurrency(other.getCurrency());
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        if (other.getBaseAmount() != 0L) {
          setBaseAmount(other.getBaseAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getCurrencyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                amount_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                baseAmount_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private money.Money.Currency currency_;
      private com.google.protobuf.SingleFieldBuilderV3<
          money.Money.Currency, money.Money.Currency.Builder, money.Money.CurrencyOrBuilder> currencyBuilder_;
      /**
       * <pre>
       * Currency is the currency the money is given in.
       * </pre>
       *
       * <code>.money.Currency currency = 1;</code>
       * @return Whether the currency field is set.
       */
      public boolean hasCurrency() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Currency is the currency the money is given in.
       * </pre>
       *
       * <code>.money.Currency currency = 1;</code>
       * @return The currency.
       */
      public money.Money.Currency getCurrency() {
        if (currencyBuilder_ == null) {
          return currency_ == null ? money.Money.Currency.getDefaultInstance() : currency_;
        } else {
          return currencyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Currency is the currency the money is given in.
       * </pre>
       *
       * <code>.money.Currency currency = 1;</code>
       */
      public Builder setCurrency(money.Money.Currency value) {
        if (currencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currency_ = value;
        } else {
          currencyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Currency is the currency the money is given in.
       * </pre>
       *
       * <code>.money.Currency currency = 1;</code>
       */
      public Builder setCurrency(
          money.Money.Currency.Builder builderForValue) {
        if (currencyBuilder_ == null) {
          currency_ = builderForValue.build();
        } else {
          currencyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Currency is the currency the money is given in.
       * </pre>
       *
       * <code>.money.Currency currency = 1;</code>
       */
      public Builder mergeCurrency(money.Money.Currency value) {
        if (currencyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            currency_ != null &&
            currency_ != money.Money.Currency.getDefaultInstance()) {
            getCurrencyBuilder().mergeFrom(value);
          } else {
            currency_ = value;
          }
        } else {
          currencyBuilder_.mergeFrom(value);
        }
        if (currency_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Currency is the currency the money is given in.
       * </pre>
       *
       * <code>.money.Currency currency = 1;</code>
       */
      public Builder clearCurrency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currency_ = null;
        if (currencyBuilder_ != null) {
          currencyBuilder_.dispose();
          currencyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Currency is the currency the money is given in.
       * </pre>
       *
       * <code>.money.Currency currency = 1;</code>
       */
      public money.Money.Currency.Builder getCurrencyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCurrencyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Currency is the currency the money is given in.
       * </pre>
       *
       * <code>.money.Currency currency = 1;</code>
       */
      public money.Money.CurrencyOrBuilder getCurrencyOrBuilder() {
        if (currencyBuilder_ != null) {
          return currencyBuilder_.getMessageOrBuilder();
        } else {
          return currency_ == null ?
              money.Money.Currency.getDefaultInstance() : currency_;
        }
      }
      /**
       * <pre>
       * Currency is the currency the money is given in.
       * </pre>
       *
       * <code>.money.Currency currency = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          money.Money.Currency, money.Money.Currency.Builder, money.Money.CurrencyOrBuilder> 
          getCurrencyFieldBuilder() {
        if (currencyBuilder_ == null) {
          currencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              money.Money.Currency, money.Money.Currency.Builder, money.Money.CurrencyOrBuilder>(
                  getCurrency(),
                  getParentForChildren(),
                  isClean());
          currency_ = null;
        }
        return currencyBuilder_;
      }

      private long amount_ ;
      /**
       * <pre>
       * Amount, given in minor units of the currency.
       * </pre>
       *
       * <code>uint64 amount = 2;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * Amount, given in minor units of the currency.
       * </pre>
       *
       * <code>uint64 amount = 2;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {

        amount_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Amount, given in minor units of the currency.
       * </pre>
       *
       * <code>uint64 amount = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        amount_ = 0L;
        onChanged();
        return this;
      }

      private long baseAmount_ ;
      /**
       * <code>uint64 base_amount = 3;</code>
       * @return The baseAmount.
       */
      @java.lang.Override
      public long getBaseAmount() {
        return baseAmount_;
      }
      /**
       * <code>uint64 base_amount = 3;</code>
       * @param value The baseAmount to set.
       * @return This builder for chaining.
       */
      public Builder setBaseAmount(long value) {

        baseAmount_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 base_amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBaseAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseAmount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:money.Price)
    }

    // @@protoc_insertion_point(class_scope:money.Price)
    private static final money.Money.Price DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new money.Money.Price();
    }

    public static money.Money.Price getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Price>
        PARSER = new com.google.protobuf.AbstractParser<Price>() {
      @java.lang.Override
      public Price parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Price> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Price> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public money.Money.Price getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_money_Currency_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_money_Currency_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_money_Price_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_money_Price_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027proto/money/money.proto\022\005money\"-\n\010Curr" +
      "ency\022\014\n\004code\030\001 \001(\t\022\023\n\013minor_units\030\002 \001(\r\"" +
      "O\n\005Price\022!\n\010currency\030\001 \001(\0132\017.money.Curre" +
      "ncy\022\016\n\006amount\030\002 \001(\004\022\023\n\013base_amount\030\003 \001(\004" +
      "B<Z:github.com/cutters-digital/gateway-p" +
      "rotobuf/golang/moneypbb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_money_Currency_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_money_Currency_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_money_Currency_descriptor,
        new java.lang.String[] { "Code", "MinorUnits", });
    internal_static_money_Price_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_money_Price_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_money_Price_descriptor,
        new java.lang.String[] { "Currency", "Amount", "BaseAmount", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
