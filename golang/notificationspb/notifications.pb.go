// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: proto/notifications/notifications.proto

package notificationspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NotificationCategory contains all the known notification-categories that exist.
type NotificationCategory int32

const (
	// Default value if not serializable.
	NotificationCategory_NOTIFICATION_CATEGORY_INVALID NotificationCategory = 0
	// Used for advertisements.
	NotificationCategory_NOTIFICATION_CATEGORY_ADVERTISEMENT NotificationCategory = 1
	// Used for updates about your upcoming haircut.
	NotificationCategory_NOTIFICATION_CATEGORY_CURRENT_HAIRCUT NotificationCategory = 2
	// Used for notifications about feedback on your completed haircut.
	NotificationCategory_NOTIFICATION_CATEGORY_FEEDBACK NotificationCategory = 3
)

// Enum value maps for NotificationCategory.
var (
	NotificationCategory_name = map[int32]string{
		0: "NOTIFICATION_CATEGORY_INVALID",
		1: "NOTIFICATION_CATEGORY_ADVERTISEMENT",
		2: "NOTIFICATION_CATEGORY_CURRENT_HAIRCUT",
		3: "NOTIFICATION_CATEGORY_FEEDBACK",
	}
	NotificationCategory_value = map[string]int32{
		"NOTIFICATION_CATEGORY_INVALID":         0,
		"NOTIFICATION_CATEGORY_ADVERTISEMENT":   1,
		"NOTIFICATION_CATEGORY_CURRENT_HAIRCUT": 2,
		"NOTIFICATION_CATEGORY_FEEDBACK":        3,
	}
)

func (x NotificationCategory) Enum() *NotificationCategory {
	p := new(NotificationCategory)
	*p = x
	return p
}

func (x NotificationCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_notifications_notifications_proto_enumTypes[0].Descriptor()
}

func (NotificationCategory) Type() protoreflect.EnumType {
	return &file_proto_notifications_notifications_proto_enumTypes[0]
}

func (x NotificationCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationCategory.Descriptor instead.
func (NotificationCategory) EnumDescriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{0}
}

// NotificationPriority contains all the known notification-priorities that exist.
type NotificationPriority int32

const (
	// Default value if not serializable. Should use default-value if it occurs.
	NotificationPriority_NOTIFICATION_PRIORITY_INVALID NotificationPriority = 0
	// Used for default/low priority notifications.
	NotificationPriority_NOTIFICATION_PRIORITY_DEFAULT NotificationPriority = 1
	// Used for high-priority notifications, such as important queue-changes, or messages from hairdressers.
	NotificationPriority_NOTIFICATION_PRIORITY_HIGH NotificationPriority = 2
)

// Enum value maps for NotificationPriority.
var (
	NotificationPriority_name = map[int32]string{
		0: "NOTIFICATION_PRIORITY_INVALID",
		1: "NOTIFICATION_PRIORITY_DEFAULT",
		2: "NOTIFICATION_PRIORITY_HIGH",
	}
	NotificationPriority_value = map[string]int32{
		"NOTIFICATION_PRIORITY_INVALID": 0,
		"NOTIFICATION_PRIORITY_DEFAULT": 1,
		"NOTIFICATION_PRIORITY_HIGH":    2,
	}
)

func (x NotificationPriority) Enum() *NotificationPriority {
	p := new(NotificationPriority)
	*p = x
	return p
}

func (x NotificationPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_notifications_notifications_proto_enumTypes[1].Descriptor()
}

func (NotificationPriority) Type() protoreflect.EnumType {
	return &file_proto_notifications_notifications_proto_enumTypes[1]
}

func (x NotificationPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationPriority.Descriptor instead.
func (NotificationPriority) EnumDescriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{1}
}

// DialogButtonType declares a material-design style for a button.
type DialogButtonType int32

const (
	DialogButtonType_DIALOG_BUTTON_TYPE_INVALID  DialogButtonType = 0
	DialogButtonType_DIALOG_BUTTON_TYPE_NEGATIVE DialogButtonType = 1
	DialogButtonType_DIALOG_BUTTON_TYPE_NEUTRAL  DialogButtonType = 2
	DialogButtonType_DIALOG_BUTTON_TYPE_POSITIVE DialogButtonType = 3
)

// Enum value maps for DialogButtonType.
var (
	DialogButtonType_name = map[int32]string{
		0: "DIALOG_BUTTON_TYPE_INVALID",
		1: "DIALOG_BUTTON_TYPE_NEGATIVE",
		2: "DIALOG_BUTTON_TYPE_NEUTRAL",
		3: "DIALOG_BUTTON_TYPE_POSITIVE",
	}
	DialogButtonType_value = map[string]int32{
		"DIALOG_BUTTON_TYPE_INVALID":  0,
		"DIALOG_BUTTON_TYPE_NEGATIVE": 1,
		"DIALOG_BUTTON_TYPE_NEUTRAL":  2,
		"DIALOG_BUTTON_TYPE_POSITIVE": 3,
	}
)

func (x DialogButtonType) Enum() *DialogButtonType {
	p := new(DialogButtonType)
	*p = x
	return p
}

func (x DialogButtonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DialogButtonType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_notifications_notifications_proto_enumTypes[2].Descriptor()
}

func (DialogButtonType) Type() protoreflect.EnumType {
	return &file_proto_notifications_notifications_proto_enumTypes[2]
}

func (x DialogButtonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DialogButtonType.Descriptor instead.
func (DialogButtonType) EnumDescriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{2}
}

// InAppDisplayType declares the different in-app display-types for messages.
type InAppDisplayType int32

const (
	InAppDisplayType_IN_APP_DISPLAY_TYPE_INVALID  InAppDisplayType = 0
	InAppDisplayType_IN_APP_DISPLAY_TYPE_NONE     InAppDisplayType = 1
	InAppDisplayType_IN_APP_DISPLAY_TYPE_DIALOG   InAppDisplayType = 2
	InAppDisplayType_IN_APP_DISPLAY_TYPE_SNACKBAR InAppDisplayType = 3
)

// Enum value maps for InAppDisplayType.
var (
	InAppDisplayType_name = map[int32]string{
		0: "IN_APP_DISPLAY_TYPE_INVALID",
		1: "IN_APP_DISPLAY_TYPE_NONE",
		2: "IN_APP_DISPLAY_TYPE_DIALOG",
		3: "IN_APP_DISPLAY_TYPE_SNACKBAR",
	}
	InAppDisplayType_value = map[string]int32{
		"IN_APP_DISPLAY_TYPE_INVALID":  0,
		"IN_APP_DISPLAY_TYPE_NONE":     1,
		"IN_APP_DISPLAY_TYPE_DIALOG":   2,
		"IN_APP_DISPLAY_TYPE_SNACKBAR": 3,
	}
)

func (x InAppDisplayType) Enum() *InAppDisplayType {
	p := new(InAppDisplayType)
	*p = x
	return p
}

func (x InAppDisplayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InAppDisplayType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_notifications_notifications_proto_enumTypes[3].Descriptor()
}

func (InAppDisplayType) Type() protoreflect.EnumType {
	return &file_proto_notifications_notifications_proto_enumTypes[3]
}

func (x InAppDisplayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InAppDisplayType.Descriptor instead.
func (InAppDisplayType) EnumDescriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{3}
}

// Notification contains eveything to be able to send a notification to a user.
type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Token is a FCM Registration-token.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notifications_notifications_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{0}
}

func (x *Notification) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// AppNotification describes what fields are available for push-messages from the gateway.
type AppNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If this ID is reused, the previous notification should be replaced or removed.
	Id       uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Alert    *Alert    `protobuf:"bytes,2,opt,name=alert,proto3" json:"alert,omitempty"`
	Dialog   *Dialog   `protobuf:"bytes,3,opt,name=dialog,proto3" json:"dialog,omitempty"`
	Snackbar *Snackbar `protobuf:"bytes,4,opt,name=snackbar,proto3" json:"snackbar,omitempty"`
	// If should_dismiss is true, the notification with the given ID should be dismissed.
	ShouldDismiss bool `protobuf:"varint,5,opt,name=should_dismiss,json=shouldDismiss,proto3" json:"should_dismiss,omitempty"`
	// If alert_plus_in_app is true, AND the app is in the background, AND Alert is set, AND dialog/snackbar is set, AND the app goes to foreground (either by tapping notification or opening the app manually), the dialog/snackbar should be shown. Will only be used for VERY important messages.
	AlertPlusInApp bool `protobuf:"varint,6,opt,name=alert_plus_in_app,json=alertPlusInApp,proto3" json:"alert_plus_in_app,omitempty"`
	// Priority for the payload. Should be used wherever applicable (Notifcation/Queue).
	Priority NotificationPriority `protobuf:"varint,8,opt,name=priority,proto3,enum=notifications.NotificationPriority" json:"priority,omitempty"`
	// If this is set, the app should attempt to refresh the data/info (salons on map, current haircuts, profile, etc) that is currently displayed.
	ShouldRefreshInfo bool `protobuf:"varint,9,opt,name=should_refresh_info,json=shouldRefreshInfo,proto3" json:"should_refresh_info,omitempty"`
}

func (x *AppNotification) Reset() {
	*x = AppNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notifications_notifications_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppNotification) ProtoMessage() {}

func (x *AppNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppNotification.ProtoReflect.Descriptor instead.
func (*AppNotification) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{1}
}

func (x *AppNotification) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppNotification) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

func (x *AppNotification) GetDialog() *Dialog {
	if x != nil {
		return x.Dialog
	}
	return nil
}

func (x *AppNotification) GetSnackbar() *Snackbar {
	if x != nil {
		return x.Snackbar
	}
	return nil
}

func (x *AppNotification) GetShouldDismiss() bool {
	if x != nil {
		return x.ShouldDismiss
	}
	return false
}

func (x *AppNotification) GetAlertPlusInApp() bool {
	if x != nil {
		return x.AlertPlusInApp
	}
	return false
}

func (x *AppNotification) GetPriority() NotificationPriority {
	if x != nil {
		return x.Priority
	}
	return NotificationPriority_NOTIFICATION_PRIORITY_INVALID
}

func (x *AppNotification) GetShouldRefreshInfo() bool {
	if x != nil {
		return x.ShouldRefreshInfo
	}
	return false
}

// Alert describes the fields available for showing a local notification/alert.
type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Category is used for grouping certain kinds of notifications together.
	Category *Category `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	// Default-action is the action that is run when the notification is tapped. If not set, it defaults to open the app.
	DefaultAction *NotificationAction `protobuf:"bytes,4,opt,name=default_action,json=defaultAction,proto3" json:"default_action,omitempty"`
	// Actions is a list of buttons that are available from the notification-drawer, and is optional.
	Actions []*NotificationAction `protobuf:"bytes,5,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notifications_notifications_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{2}
}

func (x *Alert) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Alert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Alert) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Alert) GetDefaultAction() *NotificationAction {
	if x != nil {
		return x.DefaultAction
	}
	return nil
}

func (x *Alert) GetActions() []*NotificationAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

// Category defines a category of notification. It is also known as "Channel" on Android.
type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID is a non-localizable identifier of the category, e.g. "status_updates".
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name is a localized human-readable name of the category, e.g. "Status updates" or "Statusoppdateringer".
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notifications_notifications_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{3}
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Dialog defines the fields available for showing a local dialog.
type Dialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Actions is an optional list of dialog-actions. If empty, a default dismiss-button should be used. If not empty, the list should be used.
	Actions []*DialogAction `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Dialog) Reset() {
	*x = Dialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notifications_notifications_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dialog) ProtoMessage() {}

func (x *Dialog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dialog.ProtoReflect.Descriptor instead.
func (*Dialog) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{4}
}

func (x *Dialog) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Dialog) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Dialog) GetActions() []*DialogAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

// Snackbar defines the fields available for showing a local snackbar.
type Snackbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Action is optional. Default is to use system-default dismiss timer or dismiss on tap.
	Action *SnackbarAction `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *Snackbar) Reset() {
	*x = Snackbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notifications_notifications_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snackbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snackbar) ProtoMessage() {}

func (x *Snackbar) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snackbar.ProtoReflect.Descriptor instead.
func (*Snackbar) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{5}
}

func (x *Snackbar) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Snackbar) GetAction() *SnackbarAction {
	if x != nil {
		return x.Action
	}
	return nil
}

// NotificationAction defines the fields that an action on a Notification can have.
type NotificationAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// URL is optional. Default is to open the app.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *NotificationAction) Reset() {
	*x = NotificationAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notifications_notifications_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationAction) ProtoMessage() {}

func (x *NotificationAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationAction.ProtoReflect.Descriptor instead.
func (*NotificationAction) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{6}
}

func (x *NotificationAction) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationAction) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// DialogAction defines the fields that an action on a Dialog can have.
type DialogAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// URL is optional. Default is to dismiss dialog.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// Button-type is used in accordance to Material Design.
	ButtonType DialogButtonType `protobuf:"varint,3,opt,name=button_type,json=buttonType,proto3,enum=notifications.DialogButtonType" json:"button_type,omitempty"`
}

func (x *DialogAction) Reset() {
	*x = DialogAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notifications_notifications_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogAction) ProtoMessage() {}

func (x *DialogAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogAction.ProtoReflect.Descriptor instead.
func (*DialogAction) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{7}
}

func (x *DialogAction) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DialogAction) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DialogAction) GetButtonType() DialogButtonType {
	if x != nil {
		return x.ButtonType
	}
	return DialogButtonType_DIALOG_BUTTON_TYPE_INVALID
}

// SnackbarAction defines the fields that an action on a Snackbar can have.
type SnackbarAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// URL is optional. Default is to dismiss snackbar.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *SnackbarAction) Reset() {
	*x = SnackbarAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notifications_notifications_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnackbarAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnackbarAction) ProtoMessage() {}

func (x *SnackbarAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnackbarAction.ProtoReflect.Descriptor instead.
func (*SnackbarAction) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{8}
}

func (x *SnackbarAction) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SnackbarAction) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_proto_notifications_notifications_proto protoreflect.FileDescriptor

var file_proto_notifications_notifications_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x24, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf4,
	0x02, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2d,
	0x0a, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x33, 0x0a,
	0x08, 0x73, 0x6e, 0x61, 0x63, 0x6b, 0x62, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x53, 0x6e, 0x61, 0x63, 0x6b, 0x62, 0x61, 0x72, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x63, 0x6b, 0x62,
	0x61, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x64, 0x69, 0x73,
	0x6d, 0x69, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x75,
	0x6c, 0x64, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x11, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x73, 0x49,
	0x6e, 0x41, 0x70, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf3, 0x01, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x33, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b,
	0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x50, 0x0a, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a,
	0x06, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5b,
	0x0a, 0x08, 0x53, 0x6e, 0x61, 0x63, 0x6b, 0x62, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x63, 0x6b, 0x62, 0x61, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x12, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x78, 0x0a, 0x0c, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x40, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x0e, 0x53, 0x6e, 0x61, 0x63, 0x6b, 0x62, 0x61, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a, 0xb1, 0x01,
	0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x59, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x52, 0x54, 0x49, 0x53, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x43, 0x55, 0x52, 0x52,
	0x45, 0x4e, 0x54, 0x5f, 0x48, 0x41, 0x49, 0x52, 0x43, 0x55, 0x54, 0x10, 0x02, 0x12, 0x22, 0x0a,
	0x1e, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41,
	0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x10,
	0x03, 0x2a, 0x7c, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x49,
	0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12,
	0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x02, 0x2a,
	0x94, 0x01, 0x0a, 0x10, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x5f, 0x42,
	0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x5f, 0x42,
	0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x5f,
	0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x55, 0x54,
	0x52, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x5f,
	0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x2a, 0x93, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x41, 0x70, 0x70,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x49,
	0x4e, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18,
	0x49, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e,
	0x5f, 0x41, 0x50, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x4e,
	0x5f, 0x41, 0x50, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x4e, 0x41, 0x43, 0x4b, 0x42, 0x41, 0x52, 0x10, 0x03, 0x42, 0x44, 0x5a, 0x42,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x75, 0x74, 0x74, 0x65,
	0x72, 0x73, 0x2d, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x6c, 0x61,
	0x6e, 0x67, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_notifications_notifications_proto_rawDescOnce sync.Once
	file_proto_notifications_notifications_proto_rawDescData = file_proto_notifications_notifications_proto_rawDesc
)

func file_proto_notifications_notifications_proto_rawDescGZIP() []byte {
	file_proto_notifications_notifications_proto_rawDescOnce.Do(func() {
		file_proto_notifications_notifications_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_notifications_notifications_proto_rawDescData)
	})
	return file_proto_notifications_notifications_proto_rawDescData
}

var file_proto_notifications_notifications_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_notifications_notifications_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_notifications_notifications_proto_goTypes = []interface{}{
	(NotificationCategory)(0),  // 0: notifications.NotificationCategory
	(NotificationPriority)(0),  // 1: notifications.NotificationPriority
	(DialogButtonType)(0),      // 2: notifications.DialogButtonType
	(InAppDisplayType)(0),      // 3: notifications.InAppDisplayType
	(*Notification)(nil),       // 4: notifications.Notification
	(*AppNotification)(nil),    // 5: notifications.AppNotification
	(*Alert)(nil),              // 6: notifications.Alert
	(*Category)(nil),           // 7: notifications.Category
	(*Dialog)(nil),             // 8: notifications.Dialog
	(*Snackbar)(nil),           // 9: notifications.Snackbar
	(*NotificationAction)(nil), // 10: notifications.NotificationAction
	(*DialogAction)(nil),       // 11: notifications.DialogAction
	(*SnackbarAction)(nil),     // 12: notifications.SnackbarAction
}
var file_proto_notifications_notifications_proto_depIdxs = []int32{
	6,  // 0: notifications.AppNotification.alert:type_name -> notifications.Alert
	8,  // 1: notifications.AppNotification.dialog:type_name -> notifications.Dialog
	9,  // 2: notifications.AppNotification.snackbar:type_name -> notifications.Snackbar
	1,  // 3: notifications.AppNotification.priority:type_name -> notifications.NotificationPriority
	7,  // 4: notifications.Alert.category:type_name -> notifications.Category
	10, // 5: notifications.Alert.default_action:type_name -> notifications.NotificationAction
	10, // 6: notifications.Alert.actions:type_name -> notifications.NotificationAction
	11, // 7: notifications.Dialog.actions:type_name -> notifications.DialogAction
	12, // 8: notifications.Snackbar.action:type_name -> notifications.SnackbarAction
	2,  // 9: notifications.DialogAction.button_type:type_name -> notifications.DialogButtonType
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_notifications_notifications_proto_init() }
func file_proto_notifications_notifications_proto_init() {
	if File_proto_notifications_notifications_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_notifications_notifications_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notifications_notifications_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notifications_notifications_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notifications_notifications_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notifications_notifications_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notifications_notifications_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Snackbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notifications_notifications_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notifications_notifications_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notifications_notifications_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnackbarAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_notifications_notifications_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_notifications_notifications_proto_goTypes,
		DependencyIndexes: file_proto_notifications_notifications_proto_depIdxs,
		EnumInfos:         file_proto_notifications_notifications_proto_enumTypes,
		MessageInfos:      file_proto_notifications_notifications_proto_msgTypes,
	}.Build()
	File_proto_notifications_notifications_proto = out.File
	file_proto_notifications_notifications_proto_rawDesc = nil
	file_proto_notifications_notifications_proto_goTypes = nil
	file_proto_notifications_notifications_proto_depIdxs = nil
}
