// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: proto/onboarding/onboarding_api.proto

package onboardingpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OnboardingAPIClient is the client API for OnboardingAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OnboardingAPIClient interface {
	// List all app-messages.
	ListMessages(ctx context.Context, in *ListMessagesRequest, opts ...grpc.CallOption) (*ListMessagesResponse, error)
}

type onboardingAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewOnboardingAPIClient(cc grpc.ClientConnInterface) OnboardingAPIClient {
	return &onboardingAPIClient{cc}
}

func (c *onboardingAPIClient) ListMessages(ctx context.Context, in *ListMessagesRequest, opts ...grpc.CallOption) (*ListMessagesResponse, error) {
	out := new(ListMessagesResponse)
	err := c.cc.Invoke(ctx, "/onboarding.OnboardingAPI/ListMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnboardingAPIServer is the server API for OnboardingAPI service.
// All implementations must embed UnimplementedOnboardingAPIServer
// for forward compatibility
type OnboardingAPIServer interface {
	// List all app-messages.
	ListMessages(context.Context, *ListMessagesRequest) (*ListMessagesResponse, error)
	mustEmbedUnimplementedOnboardingAPIServer()
}

// UnimplementedOnboardingAPIServer must be embedded to have forward compatible implementations.
type UnimplementedOnboardingAPIServer struct {
}

func (UnimplementedOnboardingAPIServer) ListMessages(context.Context, *ListMessagesRequest) (*ListMessagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMessages not implemented")
}
func (UnimplementedOnboardingAPIServer) mustEmbedUnimplementedOnboardingAPIServer() {}

// UnsafeOnboardingAPIServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OnboardingAPIServer will
// result in compilation errors.
type UnsafeOnboardingAPIServer interface {
	mustEmbedUnimplementedOnboardingAPIServer()
}

func RegisterOnboardingAPIServer(s grpc.ServiceRegistrar, srv OnboardingAPIServer) {
	s.RegisterService(&OnboardingAPI_ServiceDesc, srv)
}

func _OnboardingAPI_ListMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnboardingAPIServer).ListMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onboarding.OnboardingAPI/ListMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnboardingAPIServer).ListMessages(ctx, req.(*ListMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OnboardingAPI_ServiceDesc is the grpc.ServiceDesc for OnboardingAPI service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OnboardingAPI_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "onboarding.OnboardingAPI",
	HandlerType: (*OnboardingAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMessages",
			Handler:    _OnboardingAPI_ListMessages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/onboarding/onboarding_api.proto",
}
